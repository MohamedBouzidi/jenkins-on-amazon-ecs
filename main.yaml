AWSTemplateFormatVersion: '2010-09-09'
Description: <
  CloudFormation stack for Jenkins on ECS
  Allows Jenkins access to ECS Docker daemon

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          Default: 'Network'
        Parameters:
          - VPCCIDR
          - PublicSubnetCIDR
          - PrivateSubnetCIDR
          - AllowedIPRange
      - Label:
          Default: 'Launch Configuration'
        Parameters:
          - InstanceType
          - InstanceAMI
          - SystemsManagerAccess
      - Label:
          Default: 'Auto Scaling Group'
        Parameters:
          - MinSize
          - MaxSize
      - Label:
          Default: 'ECS Cluster'
        Parameters:
          - ClusterName
          - LoadBalanced
          - DockerImage

Parameters:
  SourceBucket:
    Description: 'location of network and cluster templates'
    Type: String
  VPCCIDR:
    Description: 'IP range of the VPC'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '10.10.0.0/16'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: 'must be a valid IP CIDR range of the form x.x.x.x/x.'
  PublicSubnetCIDR:
    Description: 'IP range of the public subnet'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '10.10.1.0/24'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: 'must be a valid IP CIDR range of the form x.x.x.x/x.'
  PrivateSubnetCIDR:
    Description: 'IP range of the private subnet'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '10.10.2.0/24'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: 'must be a valid IP CIDR range of the form x.x.x.x/x.'
  UsePrivateSubnet:
    Description: 'Whether to use the private subnet'
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  SystemsManagerAccess:
    Description: 'Enable Systems Manager access'
    Type: String
    AllowedValues:
      - true
      - false
    Default: true
  AllowedIPRange:
    Description: 'The public IP address range that can be used to connect to the instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '0.0.0.0/0'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: 'must be a valid IP CIDR range of the form x.x.x.x/x.'
  InstanceType:
    Description: 'EC2 instance type'
    Type: String
    Default: 't2.micro'
    AllowedValues:
      - 't2.micro'
      - 't2.small'
      - 't2.medium'
  InstanceAMI:
    Description: 'EC2 AMI ID'
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id'
    ConstraintDescription: 'Must be a valid EC2 instance type.'
  ClusterName:
    Description: 'Name of the cluster'
    Type: String
    Default: 'jenkins-cluster'
  LoadBalanced:
    Description: 'Allow load balacing of Jenkins tasks'
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  DockerImage:
    Description: 'The docker image to use for Jenkins'
    Type: String
    Default: 'jenkins/jenkins:slim'
  MinSize:
    Description: 'Minimum number of ECS container instances'
    Type: String
    Default: '1'
  MaxSize:
    Description: 'Maximum number of ECS container instances'
    Type: String
    Default: '3'

Conditions:
  IsNVirginia: !Equals [ !Ref AWS::Region, "us-east-1" ]

Resources:
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - "https://s3"
          - !If [ IsNVirginia, "", !Sub "-${AWS::Region}" ]
          - !Sub ".amazonaws.com/${SourceBucket}/network.yaml"
      Parameters:
        VPCCIDR: !Ref VPCCIDR
        PublicSubnetCIDR: !Ref PublicSubnetCIDR
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
        UsePrivateSubnet: !Ref UsePrivateSubnet

  ClusterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - "https://s3"
          - !If [ IsNVirginia, "", !Sub "-${AWS::Region}" ]
          - !Sub ".amazonaws.com/${SourceBucket}/cluster.yaml"
      Parameters:
        VPC: !GetAtt NetworkStack.Outputs.VPC
        PublicSubnet: !GetAtt NetworkStack.Outputs.PublicSubnet
        PrivateSubnet: !GetAtt NetworkStack.Outputs.PrivateSubnet
        AllowedIPRange: !Ref AllowedIPRange
        InstanceType: !Ref InstanceType
        InstanceAMI: !Ref InstanceAMI
        SystemsManagerAccess: !Ref SystemsManagerAccess
        MinSize: !Ref MinSize
        MaxSize: !Ref MaxSize
        ClusterName: !Ref ClusterName
        LoadBalanced: !Ref LoadBalanced
        DockerImage: !Ref DockerImage
        UsePrivateSubnet: !Ref UsePrivateSubnet